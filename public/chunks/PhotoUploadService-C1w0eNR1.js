import{a as t,v as e,U as o}from"../entries/index-DJjzOP2R.js";import"./react-vendor-DtX1tuCI.js";import"./api-vendor-Agjpt42k.js";import"./state-vendor-BM-fP32G.js";class a{static async uploadPhoto(a,s,r,i,n,c){if(!a)throw new Error("No file provided");if(!a.type.startsWith("image/"))throw new Error("File must be an image");if(!s)throw new Error("Location title is required");if(!r)throw new Error("Session ID is required");const h=new FormData;h.append("photo",a),h.append("locationTitle",s),h.append("sessionId",r),i&&h.append("teamName",i),n&&h.append("locationName",n),c&&h.append("eventName",c);try{const a=await t.requestFormData("/photo-upload",h,{timeout:6e4,retryAttempts:2});return e(o,a,"photo upload")}catch(l){throw l}}static async uploadPhotoWithResize(t,e,o,a=1600,s=.8,r,i,n){const c=await this.resizeImage(t,a,s);return this.uploadPhoto(c,e,o,r,i,n)}static async getExistingPhoto(t,e,o,a){try{const s=await this.getTeamPhotos(e,o,a);return s.find(e=>e.locationId===t)||null}catch(s){return null}}static async savePhotoRecord(t,e,o,a,s){try{const r={...t,locationId:e},i=await this.getTeamPhotos(o,a,s),n=i.length,c=i.filter(t=>t.locationId!==e);c.length;c.push(r),await this.saveTeamPhotos(o,c,a,s)}catch(r){throw r}}static async saveTeamPhotos(t,e,o,a){try{const s=`team-photos:${o&&a?`${o}-${a}-${t}`:t}`;localStorage.setItem(s,JSON.stringify(e));const r=localStorage.getItem(s);r&&JSON.parse(r)}catch(s){throw s}}static async getTeamPhotos(t,e,o){try{const a=`team-photos:${e&&o?`${e}-${o}-${t}`:t}`,s=localStorage.getItem(a);for(let t=0;t<localStorage.length;t++){const e=localStorage.key(t);if(e&&e.startsWith("team-photos:")){const t=localStorage.getItem(e);t&&JSON.parse(t)}}if(!s)return[];const r=JSON.parse(s);return r.forEach((t,e)=>{}),r}catch(a){return[]}}static async getSessionPhotos(t,e){try{const o=e?`session-photos:${t}:${e}`:`session-photos:${t}`,a=localStorage.getItem(o);if(!a){if(e){const e=`session-photos:${t}`;localStorage.getItem(e)&&localStorage.removeItem(e)}return[]}return JSON.parse(a)}catch(o){return[]}}static async saveSessionPhotos(t,e,o){try{const a=o?`session-photos:${t}:${o}`:`session-photos:${t}`;localStorage.setItem(a,JSON.stringify(e))}catch(a){throw a}}static async clearTeamPhotos(t,e,o){try{const a=`team-photos:${e&&o?`${e}-${o}-${t}`:t}`;localStorage.removeItem(a)}catch(a){throw a}}static async resizeImage(t,e=1600,o=.8){return new Promise(a=>{const s=document.createElement("canvas"),r=s.getContext("2d"),i=new Image;i.onload=()=>{const n=Math.min(e/i.width,e/i.height);n>=1?a(t):(s.width=i.width*n,s.height=i.height*n,r.drawImage(i,0,0,s.width,s.height),s.toBlob(e=>{if(e){const o=new File([e],t.name,{type:"image/jpeg",lastModified:Date.now()});a(o)}else a(t)},"image/jpeg",o))},i.src=URL.createObjectURL(t)})}}export{a as PhotoUploadService};
